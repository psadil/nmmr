% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/prior-class.R
\name{DemingPrior}
\alias{DemingPrior}
\title{List of priors}
\description{
List of priors

List of priors
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{z_mu_mu}}{\eqn{\mu^{\mu^z}} ~ \code{normal(z_mu_mu[1], z_mu_mu[2])}}

\item{\code{z_mu_sigma}}{\eqn{\sigma^{\mu^z}} ~ \code{normal(z_mu_sigma[1], z_mu_sigma[2])}}

\item{\code{z_sigma_mu}}{\eqn{\mu^{\sigma^z}} ~ \code{normal(z_sigma_mu[1], z_sigma_mu[2])}}

\item{\code{z_sigma_sigma}}{\eqn{\sigma^{\sigma^z}} ~ \code{normal(z_sigma_sigma[1], z_sigma_sigma[2])}}

\item{\code{x_sigma_mu}}{\eqn{\mu^{\sigma^x}} ~ \code{normal(x_sigma_mu[1], x_sigma_mu[2])}}

\item{\code{x_sigma_sigma}}{\eqn{\sigma^{\sigma^x}} ~ \code{normal(x_sigma_sigma[1], x_sigma_sigma[2])}}

\item{\code{y_sigma_mu}}{\eqn{\mu^{\sigma^y}} ~ \code{normal(y_sigma_mu[1], y_sigma_mu[2])}}

\item{\code{y_sigma_sigma}}{\eqn{\sigma^{\sigma^y}} ~ \code{normal(y_sigma_sigma[1], y_sigma_sigma[2])}}

\item{\code{g_mu}}{\eqn{\mu^g} ~ \code{normal(g_mu[1], g_mu[2])}}

\item{\code{g_sigma}}{\eqn{\sigma^g} ~ \code{normal(g_sigma[1], g_sigma[2])}}

\item{\code{a_mu}}{\eqn{\mu^a} ~ \code{normal(a_mu[1], a_mu[2])}}

\item{\code{a_sigma}}{\eqn{\sigma^a} ~ \code{normal(a_sigma[1], a_sigma[2])}}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{DemingPrior$new()}}
\item \href{#method-as_list}{\code{DemingPrior$as_list()}}
\item \href{#method-clone}{\code{DemingPrior$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
Create a new Model object.
All values must be greater than 0.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DemingPrior$new(
  z_mu_mu = c(0, 10),
  z_mu_sigma = c(0, 10),
  z_sigma_mu = c(0, 10),
  z_sigma_sigma = c(0, 10),
  x_sigma_mu = c(0, 10),
  x_sigma_sigma = c(0, 10),
  y_sigma_mu = c(0, 10),
  y_sigma_sigma = c(0, 10),
  g_mu = c(0, 10),
  g_sigma = c(0, 10),
  a_mu = c(0, 10),
  a_sigma = c(0, 10)
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{z_mu_mu}}{vector of length 2}

\item{\code{z_mu_sigma}}{vector of length 2}

\item{\code{z_sigma_mu}}{vector of length 2}

\item{\code{z_sigma_sigma}}{vector of length 2}

\item{\code{x_sigma_mu}}{vector of length 2}

\item{\code{x_sigma_sigma}}{vector of length 2}

\item{\code{y_sigma_mu}}{vector of length 2}

\item{\code{y_sigma_sigma}}{vector of length 2}

\item{\code{g_mu}}{vector of length 2}

\item{\code{g_sigma}}{vector of length 2}

\item{\code{a_mu}}{vector of length 2}

\item{\code{a_sigma}}{vector of length 2}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A new \code{Prior} object.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-as_list"></a>}}
\if{latex}{\out{\hypertarget{method-as_list}{}}}
\subsection{Method \code{as_list()}}{
Convert object to a list.
This is useful when passing data to Stan
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DemingPrior$as_list()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DemingPrior$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
